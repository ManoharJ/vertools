/*
* seqtweak.h
*
* Copyright 2014 Ryan Koehler, VerdAscend Sciences, ryan@verdascend.com
*
* The programs and source code of the vertools collection are free software.
* They are distributed in the hope that they will be useful,
* WITHOUT ANY WARRANTY OF FITNESS FOR ANY PARTICULAR PURPOSE.  
* 
* Permission is granted for research, educational, and commercial use and 
* modification as long as 1) Code and any derived works are not redistributed
* for any fee, and 2) Proper credit is given to the authors. If you wish to 
* include this software in a product, please contact the authors.
*
*/


#define VERSION_S "SeqTweak Version 0.6"

#define SEQTWEAK_ID     5141 
typedef struct SEQTWEAK
{
    int ID;
	FILE *in;               /*  Input file */
    char inname[NSIZE];     /*  Input filename */
	int iform;              /*  Input file format */
    FILE *out;              /*  Output file */
    char outname[NSIZE];	/*  Output filename */
    struct SEQ *seq;        /*  Sequence object */
    int firstb,lastb;       /*  First / last base */
    int do_rre;             /* Flag for range releative to end (backwards) */
	int mis;				/*	Number of missmatches */
	int ins;				/*	Number of inserts */
	int del;				/*	Number of deletions */
	int ids;				/*	In/Del word size */
	int mds;				/*	Minimum disruption separation */
    char bname[NSIZE];		/*  Base name for tweaked guys */
	int do_amb;				/*	Flag for All Missmatch Bases */
	int do_smm;				/*	Flag for shotgun missmatches */
	int do_cpm;				/*	Flag for close-packed missmatches */
    int do_sh, do_fsh;      /*  Flag for shuffle and full shuffle */
	int seed;				/*	Random number seed */
    int do_nsim;            /* Flag for old style naming */
    int do_nre;             /* Flag for naming relative to 3' end */
    char smm_sub[10];       /* Single mismatch substitution */
    int smm_pos;            /* Single mm postion */
}SEQTWEAK;

#define CHECK_SEQTWEAK(ob) if(ob){DestroySeqtweakI(ob); ob=NULL;}
	

#define MAX_TWEAKSEQ	200
#define MAX_IDSIZE		5
#define MAX_TWK_TRYS	10000
#define MAX_TWK_STARTS	1000


/*********************** ppp ********************
* C function listing generated by gen_prot
* Mon Aug 25 15:09:08 2014
*/
/****************************************************************
* seqtweak.c
*/
int main(int argc, char **argv);
void SeqTweakUse(void);
int SeqTweakI(int argc,char **argv);
SEQTWEAK *CreateSeqtweakPO(void);
int DestroySeqtweakI(SEQTWEAK *stPO);
void InitSeqtweak(SEQTWEAK *stPO);
int OkSeqTweakOptsI(SEQTWEAK *stPO);
int SetUpSeqtweakI(SEQTWEAK *stPO);
void WriteSeqtweakHeader(SEQTWEAK *stPO,FILE *outPF);
int TweakableSeqI(SEQTWEAK *stPO, SEQ *seqPO, int nseq);
int TweakSeqBasesI(SEQTWEAK *stPO, int verb, FILE *outPF);
int TweakShuffleSeqI(SEQTWEAK *stPO,int verb, FILE *outPF);
int FillTweakMaskI(SEQTWEAK *stPO, int tlen, int firstb, char *maskS, int slen);
int FillTweakInDelMaskI(SEQTWEAK *stPO, char *maskS, int slen);
int FillTweakMissShotgunMaskI(SEQTWEAK *stPO, char *maskS,int slen);
int FillTweakMissClosePackMaskI(SEQTWEAK *stPO, char *maskS, int slen);
int FillTweakMissSpeedMaskI(SEQTWEAK *stPO, char *maskS,int slen);
int OkDisSpaceI(int ran,char *maskS,int slen,int mds);
void MaskDisruption(int ran,char *maskS,int slen,int mds);
void SetTweakedName(SEQTWEAK *stPO,char *nameS, char *newS, int len);
void SetTweakedSimName(SEQTWEAK *stPO,char *nameS, char *newS);
void SetTweakedNmodName(SEQTWEAK *stPO,char *nameS, char *newS, int len);

