/*
* score.h
*
* Copyright 2015 Ryan Koehler, VerdAscend Sciences, ryan@verdascend.com
*
* The programs and source code of the vertools collection are free software.
* They are distributed in the hope that they will be useful,
* WITHOUT ANY WARRANTY OF FITNESS FOR ANY PARTICULAR PURPOSE.  
* 
* Permission is granted for research, educational, and commercial use and 
* modification as long as 1) Code and any derived works are not redistributed
* for any fee, and 2) Proper credit is given to the authors. If you wish to 
* include this software in a product, please contact the authors.
*
*/


#ifndef __SCOREH__
#define __SCOREH__

#define MAX_SC_VALS 100     /* Max elements in score field array */

typedef struct SCOREC
{
    int id;     /* Index */
    DOUB sc;    /* Value */
}SCOREC;

#define SCFIELD_ID  4042
typedef struct SCFIELD
{
    int ID;
    char name[NSIZE+1];      /* core field name */
    int n;                  /* Number of elements in value array */
    DOUB min,max;           /* Minimum / max elements in value array */
    DOUB step;              /* Step increment in value array */
    DOUB *yval;             /* Y value array */
    int ngiven;             /* Given value count */
    DOUB *gxv;              /* Given X values */
    DOUB *gyv;              /* Given Y values */
}SCFIELD;

#define CHECK_SCOREC(sc)    if(sc){DestroyScorecsI(sc); sc=NULL;}
#define CHECK_SCFIELD(ob)   if(ob){DestroyScfieldI(ob); ob=NULL;}

#define MIN_SCF_STEP    0.00001


/***
*   IO stuff
*/
#define SCFIELD_START_S "SCFIELD_START"
#define SCFIELD_END_S   "SCFIELD_END"

#define SCORE_OUT_NICE  666 
#define SCORES_PER_LINE 5


/*********************** ppp ********************
* C function listing generated by gen_prot
* Thu Mar 27 08:30:58 2014
*/
/****************************************************************
* score.c
*/
SCOREC *CreateScorecsPO(int n);
int DestroyScorecsI(SCOREC *recsPO);
void InitScorecs(SCOREC *recsPO,int n);
SCFIELD *CreateScfieldPO(int ngive, int nval, char *nameS);
int DestroyScfieldI(SCFIELD *sfPO);
void InitScfield(SCFIELD *sfPO);
void SortScorecVals(SCOREC *scPO,int n,int dir);
void SortScorecIds(SCOREC *scPO,int n,int dir);
void DumpScorecsI(SCOREC *recsPO,int n,FILE *outPF);
int SetScfieldNameI(SCFIELD *sfPO,char *nameS,int max);
int FillScfieldNameStringI(SCFIELD *sfPO,char *nameS,int max);
REAL EvalScfieldScoreR(SCFIELD *sfPO,REAL vR);

/****************************************************************
* score_io.c
*/
int LoadScfieldI(FILE *inPF, int error, SCFIELD **sfPPO);
int LoadScfieldArrayI(FILE *inPF, SCFIELD ***scPPPO);
int ReportScfieldI(SCFIELD *sfPO, int full, FILE *oPF);
int ReportScfieldArrayI(SCFIELD **scPPO, int n, int full, FILE *oPF);


#endif
