/*
* wordlist.h
*
* Copyright 2015 Ryan Koehler, VerdAscend Sciences, ryan@verdascend.com
*
* The programs and source code of the vertools collection are free software.
* They are distributed in the hope that they will be useful,
* WITHOUT ANY WARRANTY OF FITNESS FOR ANY PARTICULAR PURPOSE.  
* 
* Permission is granted for research, educational, and commercial use and 
* modification as long as 1) Code and any derived works are not redistributed
* for any fee, and 2) Proper credit is given to the authors. If you wish to 
* include this software in a product, please contact the authors.
*
*/


#ifndef __WORDLISTH__
#define __WORDLISTH__

#define WORDLIST_ID     6035

typedef struct WORDLIST
{
    int ID;
    char name[NSIZE+1];     /* ame */
    char fname[NSIZE+1];    /* nput file name */
    char *words;            /* llocated space for words */
    int n_words;            /* mount of allocated space */
    int wsize;              /* max) Size of words */
    int n;                  /* umber */
} WORDLIST;

#define DEF_WLWSIZE     100 /* efault wordlist wordsize */

#define CHECK_WORDLIST(fp)  if(fp){DestroyWordlistI(fp);fp=NULL;}

/*********************** ppp ********************
* C function listing generated by gen_prot
* Sat May 17 20:35:37 2014
*/
/****************************************************************
* wordlist.c
*/
WORDLIST *CreateWordlistPO(char *fnameS, int wsize);
int DestroyWordlistI(WORDLIST *wlPO);
void InitWordlist(WORDLIST *wlPO, int wsize);
int HandleWordlistSpaceI(WORDLIST *wlPO, int i);
void DumpWordlist(WORDLIST *wlPO, int st, int en, FILE *outPF);
int SetWordlistWsizeI(WORDLIST *wlPO, int wsize);
int SetWordlistLengthI(WORDLIST *wlPO, int len);
int GetWordlistLengthI(WORDLIST *wlPO);
int AppendWdordlistWordI(WORDLIST *wlPO, char *wS, int fit);
int AddWordlistWordI(WORDLIST *wlPO, int w, char *wS, int fit);
int SetWordlistWordI(WORDLIST *wlPO, int w, char *wS, int fit);
int GetWordlistWordI(WORDLIST *wlPO, int w, char *wS, int max);
int WordlistLenStatsI(WORDLIST *wlPO, int *minPI, int *maxPI, DOUB *avPD);
int WordlistAutoFormatStringI(WORDLIST *wlPO, int *wPI, char *formS);
int WordInWordlistI(WORDLIST *wlPO, char *wordS, int kc, int st, int sub, int *whichPI);
int WordlistLoadFromFileI(WORDLIST *wlPO, char *fnameS, int wsize);
int LoadWordStringFromFileI(FILE *fPF, int max, char **arrayPPC);


#endif
