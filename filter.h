/*
* filter.h
*
* Copyright 2014 Ryan Koehler, VerdAscend Sciences, ryan@verdascend.com
*
* The programs and source code of the vertools collection are free software.
* They are distributed in the hope that they will be useful,
* WITHOUT ANY WARRANTY OF FITNESS FOR ANY PARTICULAR PURPOSE.  
* 
* Permission is granted for research, educational, and commercial use and 
* modification as long as 1) Code and any derived works are not redistributed
* for any fee, and 2) Proper credit is given to the authors. If you wish to 
* include this software in a product, please contact the authors.
*
*/

#define VERSION_S		"Filter version 1.01"

#define FILTBUF_SIZE    50000

#define DEF_COL         1



#define FILTER_ID       5071
typedef struct FILTER
{
	int ID;
	char inname[NSIZE];		/* Input file name */
	FILE *in;				/* Input file */
    char *mask;             /* Input file mask */
    int n_mask;             /* Mask length */
	char outname[NSIZE];	/* Output file name */
	FILE *out;				/* Outpuf file */
    char wlisname[NSIZE];   /* Token list filename */
	struct WORDLIST *wlis;  /* Token list structure */
    int num;                /* Working number of lines */
    int nok;                /* Working number of qualified lines */
    int col;                /* Column to filter on */
    DOUB min, max;          /* Min / max values */
    int firstl,lastl;       /* First and last lines */
    int rann;               /* Random number to pick */
    int seed;               /* Random seed */
    DOUB ranf, ranp;        /* Random fraction / probability to pick */
    int ranm;               /* Explicit random mask dimension */
	int do_not;             /* Flag to invert record qualifcations */
    int skipc;              /* Number of chars to skip in input lines */
	int do_stat;            /* Flag to do stats */
    int do_kc;              /* Flag to keep case for token compare */
    int do_wst;             /* Flag to compare starte for token compare */
    int do_wsub;            /* Flag to check substring for token compare */
	int do_flag;            /* Flag to prepend output lines 1/0 */
	int do_pln;             /* Flag to prepend output lines with line number */
	int do_icbn;            /* Flag to ignore chars before numbers */
}FILTER;

#define CHECK_FILTER(fp) 	if(fp){DestroyFilterI(fp);fp=NULL;}


/*********************** ppp ********************
* C function listing generated by gen_prot
* Fri Feb 21 13:00:02 2014
*/
/****************************************************************
* filter.c
*/
int main(int argc, char **argv);
void Filter_numsUse(void);
int Filter_numsI(int argc, char **argv);
FILTER *CreateFilterPO(void);
int DestroyFilterI(FILTER *fpPO);
void InitFilter(FILTER *fpPO);
int CheckFilterOptionsI(FILTER *filtPO);
int HandleFilterMaskingI(FILTER *filtPO);
int HandleFilterListSetsI(FILTER *filtPO);
int OpenFilterFilesI(FILTER *filtPO);
void ReportFilterStats(FILTER *filtPO, int num, int nok) ;
int FiltGetWordNumValI(FILTER *filtPO, char *wordS, DOUB *valPD);
int IsFiltLineOkI(FILTER *filtPO, int line, char *cPC) ;

